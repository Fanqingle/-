一个整数数组，元素包括正数和负数，求该数组连续子数组和的最大值，要求算法复杂度O(n)
#include <iostream>
using namespace std;
void findMaxSubArray(int a[],int n,int m[])
{
 m[0]=a[0];
 int max=m[0];
  for (int i=1 ; i<n ; ++i)
  {
   if (m[i-1]<0)
   {
    m[i]=a[i];
   }
   else
    m[i]=m[i-1]+a[i];
   if (max<=m[i])
   {
    max=m[i];
   }
   
  }
  cout<<"the max sum of sub－array are: "<<max<<endl;
}
int main()
{
 int a[10]={1,-1,-1,1,1,-1,1,1,1,-1};
 //int a[]={1, -2, 3, 10, -4, 7, 2, -5};
 int n=sizeof(a)/sizeof(int);
 int *m=new int [n];
 findMaxSubArray(a,n,m);
   return 0;
}

