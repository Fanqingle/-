整个系统分为三个部分。
Part1：内存，可以存放m个单位的数据。
Part2：硬盘，共存放了n个单位的数据。
Part3：数据队列，存放了数据的读取顺序。
       例如，n为5（1，2，3，4，5）
       则读取队列可能为｛3，2，2，4，5，1，3，2｝等等。

内存状态：
   状态1：内存未满。
   状态2：内存已满。

策略：
   1，在内存未满的时候，对于要读取的数据，
      首先检索内存中是否已经存在该数据。
      如果存在，则不读硬盘。如果内存不存在，则从硬盘读取存入内存。
      注：这样可以保证内存中不存在重复数据。
     
   2，如果内存已满。
      按照策略1，只要n>m，就有内存已满的状态。
      在内存已满的情况下，从读取队列里面读取指定数据时， 
      首先检索内存中是否已经存在该数据。
      如果存在，则不读硬盘。如果内存不存在，则需要替换内存中的数据。
      也就是内存中的某个数据需要被移出，换成新的数据。
  
      接下来就要介绍替换策略。
      对于内存中的m个数据。依次检索队列中“将要读取数据”后面的m-1个数据。看“即将被读取的”m-1个数据，是否在内存中已经存在。对于已经存在的。不能被删除替换，而对于接下来的m-1个数据中没有的内存数据可以被删除替换。
     注：这个策略是为了保证，即将被访问的数据不被替换。减少读硬盘的次数。