输入一个整数和一棵二元树。从树的根结点开始往下访问一直到叶结点所经过的所有结点形成一条路径。打印出和与输入整数相等的所有路径。
二元树结点的数据结构定义为：
struct BinaryTreeNode // a node in the binary tree
{
      int              m_nValue; // value of node
      BinaryTreeNode  *m_pLeft;  // left child of node
      BinaryTreeNode  *m_pRight; // right child of node
};

代码如下：
public static void findPath(int n, int sum, node current, ArrayList path)
{
 if( current = NULL ) 
 {
  path.clear();
  return;
 }
 if( current.data > n )
 {
  path.clear();
  return;
 }
 if( current.data < n )
 {
  path.add(current);
  findPath(n - current.data, sum, current.left, path);
  findPath(n - current.data, sum, current.right, path);
 }
 if( current.data = n )
 {
  path.add(current);
  for(int i = 0; i < path.size(); i++)
   System.out.print(path[i]);
  path.clear;
  findPath(sum, sum, current.left, path);
  findPath(sum, sum, current.right, path);
 }
}


7.
